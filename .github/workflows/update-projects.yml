name: Update Published Projects

on:
  workflow_dispatch:
  repository_dispatch:
    types: [update_project]

permissions:
  contents: write
  actions: read

jobs:
  update-projects:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug incoming payload
        run: |
          echo "### PAYLOAD RECEIVED ###"
          echo '${{ toJson(github.event.client_payload) }}'

      - name: Generate project file
        id: generate
        run: |
          TITLE="${{ github.event.client_payload.title }}"
          REPO_URL="${{ github.event.client_payload.repo_url }}"
          DESCRIPTION="${{ github.event.client_payload.description }}"
          TAGS="${{ github.event.client_payload.tags }}"

          # fallback per test manuale
          if [ -z "$TITLE" ]; then
            TITLE="Untitled Project"
            REPO_URL="https://github.com/lucascarpantonio/"
            DESCRIPTION="No description provided yet."
            TAGS="python"
          fi

          # genera nome file
          FILENAME=$(basename "$REPO_URL")
          FILEPATH="_projects/${FILENAME}.md"

          echo "Creating markdown for $TITLE â†’ $FILEPATH"

          mkdir -p _projects

          cat > "$FILEPATH" <<EOF
---
layout: project
title: "$TITLE"
url: "$REPO_URL"
description: "$DESCRIPTION"
tags: [${TAGS}]
---

$DESCRIPTION

ðŸ”— [View the repository on GitHub]($REPO_URL)
EOF

      - name: Commit and push updates
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add _projects/
          if git diff --cached --quiet; then
            echo "No project updates to commit."
          else
            git commit -m "Add or update project: ${{ github.event.client_payload.title }}"
            git push origin main
          fi
